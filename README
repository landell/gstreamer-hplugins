Copyright 2008-2009 Samuel R. C. Vale <srcvale@holoscopio.com>

This software was based on V4L2 Documentation, and luvcview (Copyright
2005 2006 2007 Laurent Pinchart, Michel Xhaard, and 2006 Gabriel A.
Devenyi).

V4l2capture is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

V4l2 is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with v4l2capture.  If not, see <http://www.gnu.org/licenses/>.


1. Intro

V4l2capture is a simple console software to take images from cameras
supported by a v4l2 compliant driver. It provide a simple interface and
flexible parammeters to well suit on shell scripts.

V4l2 capture was mostly tested with UVC cameras. By now, v4l2capture
support devices that provide MJPEG/JPEG and RAW streams.

New features that are included: face detection, cropping, and service
mode, activated by comand line options.


2. Credits

v4l2capture authors - Samuel R. C. Vale <srcvale@holoscopio.com> and
Thadeu Lima de Souza Cascardo <cascardo@holoscopio.com>.

v4l2capture was based on V4l2 documentation, and some parts of luvcview
(Copyright 2005 2006 2007 Laurent Pinchart, Michel, Xhaard, and 2006
Gabriel A. Devenyi).


3. Training

Face detection algorithm use a color model to identify skin parts in images
taken. This model is based in samples of skin images, and generated by a
included script (skinmodel.m). The training script was wrote for GNU Octave
3.0.x, so, it must be installed on host.

The file with skin samples (input.png) can be made by any image editor, with
images previously taken by the target camera, at different light conditions or
skin colors. Non skin pixels shall be black (RGB #000000). With this sample
image at the current directory, run the training script:

#>./skinmodel.m

A new skinmodel.h will be generated for that sample. Build v4l2capture again so
changes take effect.


4. Building

First, we need the libjpeg installed. So, to build v4l2capture just use:

$> make

To install v4l2capture, run with root privileges:

$> make install


5. Running

Running without parameters, v4l2capture will try take 10 320x240 images
from /dev/video0, saving them as "image-x.jpg".

Parameters:

-r resolution	Image resolution WxH (default: 320x240)
-o prefix	Output prefix (default: ./image)
-f prefix	If set, output full image also, with given prefix
-d device	Path to device (default: /dev/video0)
-n number	Number of frames to take (max: 20, default: 10)
-s		Run as service (use v4l2capture-client to shot)
-c		Crop detected faces
-p		Force 3x4 ratio format to face detection
-m		Draw a green rectangle in detected faces
-g		Save images as grayscale
-h		Show this help


6. Issues

Some USB devices switches their own modes depending on USB speed. So, a
USB 2.0 camera that don't support MJPEG in high speed mode maybe can do
it if plugged on a full speed host or if the ehci linux module has been
removed (rmmod ehci-hcd).

--
